services:
  tree_house.io.event_dispatcher:
    public: false
    class: Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher
    arguments:
      - @service_container
    calls:
      - [ addSubscriber, [ '@tree_house.io.subscriber.feeder_logging' ] ]
      - [ addSubscriber, [ '@tree_house.io.subscriber.import_logging' ] ]
      - [ addSubscriber, [ '@tree_house.io.subscriber.scrape_logging' ] ]

  tree_house.io.subscriber.import_logging:
    public: true
    class: TreeHouse\IoBundle\EventListener\ImportLoggingSubscriber
    arguments:
      - @logger

  tree_house.io.subscriber.feeder_logging:
    public: true
    class: TreeHouse\IoBundle\EventListener\FeederLoggingSubscriber
    arguments:
      - @logger

  tree_house.io.subscriber.scrape_logging:
    public: true
    class: TreeHouse\IoBundle\Scrape\EventListener\ScrapeLoggingSubscriber
    arguments:
      - @logger

  tree_house.io.listener.source_modification:
    public: true
    class: TreeHouse\IoBundle\EventListener\SourceModificationListener
    arguments:
      - @tree_house.io.source_processor
      - @tree_house.io.event_dispatcher
    tags:
      - { name: doctrine.event_listener, event: onFlush, lazy: true }
      - { name: doctrine.event_listener, event: postFlush, lazy: true }

  tree_house.io.listener.source_raw_data:
    public: true
    class: TreeHouse\IoBundle\EventListener\SourceRawDataListener
    tags:
      - { name: tree_house.io.event_listener, event: feeder.feed.resource.serialize.pre, method: onResourcePreSerialize }
      - { name: tree_house.io.event_listener, event: io.import.item.success, method: onImportItemSuccess }
      - { name: tree_house.io.event_listener, event: io.scrape.item.success, method: onScrapeItemSuccess }

  tree_house.io.twig.extension.common:
    public: false
    class: TreeHouse\IoBundle\Twig\CommonExtension
    tags:
      - { name: twig.extension }
